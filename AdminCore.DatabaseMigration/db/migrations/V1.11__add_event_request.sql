  ----------------------------------------------------------------------------------------

/*
                                   REQUEST TYPE TABLE
*/

  ----------------------------------------------------------------------------------------
CREATE SEQUENCE IF NOT EXISTS public.request_type_request_type_id_seq;
CREATE TABLE IF NOT EXISTS public.request_type
(
    request_type_id integer NOT NULL DEFAULT nextval('request_type_request_type_id_seq'::regclass),
    request_description character varying(255) NOT NULL,
    request_life_cycle integer NOT NULL,
    CONSTRAINT request_type_request_type_id_pkey PRIMARY KEY (request_type_id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER SEQUENCE request_type_request_type_id_seq
    OWNED BY request_type.request_type_id;

INSERT INTO public.request_type (request_type_id, request_description, request_life_cycle)
VALUES (1, 'Client PTO request', 48)
ON CONFLICT (request_type_id)
  DO NOTHING;


  ----------------------------------------------------------------------------------------

/*
                                   EVENT REQUEST TABLE
*/

  ----------------------------------------------------------------------------------------
CREATE SEQUENCE IF NOT EXISTS public.event_request_event_request_id_seq;
CREATE TABLE IF NOT EXISTS public.event_request
(
    event_request_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    request_type_id integer NOT NULL,
    event_id integer NOT NULL,
    event_date_id integer NOT NULL,
    salt character varying(255) NOT NULL,
    hash character varying(255) NOT NULL,
    time_created timestamp NOT NULL,
    time_expires timestamp NOT NULL,
    expired boolean NOT NULL,
    auto_approved boolean NOT NULL,
    CONSTRAINT request_type_request_type_id_fkey FOREIGN KEY (request_type_id)
        REFERENCES public.request_type (request_type_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT event_event_id_fkey FOREIGN KEY (event_id)
        REFERENCES public.event (event_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
    CONSTRAINT event_date_event_date_id_fkey FOREIGN KEY (event_date_id)
        REFERENCES public.event_date (event_date_id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER SEQUENCE event_request_event_request_id_seq
    OWNED BY event_request.event_request_id;
